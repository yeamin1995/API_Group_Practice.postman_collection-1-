{
	"info": {
		"_postman_id": "830fb4fa-5a3c-454a-bd02-3c102397cab9",
		"name": "API_Group_Practice",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "InstallPostmanBDD",
			"item": [
				{
					"name": "InstallPostmanBDD",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setGlobalVariable('postmanBDD', responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://bigstickcarpet.com/postman-bdd/dist/postman-bdd.js",
							"protocol": "http",
							"host": [
								"bigstickcarpet",
								"com"
							],
							"path": [
								"postman-bdd",
								"dist",
								"postman-bdd.js"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PostCall",
			"item": [
				{
					"name": "Post_Call",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(globals.postmanBDD);",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"landlordsId\",jsonData.id);",
									"describe('creating a new land lord',function(){",
									"   //Assertion ",
									"    it('Should return 201',function(){",
									"       ",
									"           response.should.have.status(201);",
									"        });",
									"//Assertion",
									"it ('should return JSON in header as contentType', function(){",
									"         response.should.have.header('content-type', 'application/json;charset=UTF-8');",
									"    });",
									"",
									" //Assertion",
									" it ('should return firstName', function(){",
									"         ",
									"         response.body.should.have.property ('firstName').and.equal(environment.fakefirstName);",
									"         ",
									"    });",
									"//Assertion",
									" it ('should return lastName', function(){",
									"       response.body.should.have.property('lastName').and.equal(environment.fakelastName);",
									"   });",
									" ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let fakeValue= Math.random().toString(36).substring(2);",
									"pm.environment.set(\"fakefirstName\",fakeValue);",
									"pm.environment.set(\"fakelastName\",fakeValue);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{fakefirstName}}\",\n  \"lastName\": \"{{fakelastName}}\",\n  \"trusted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/landlords",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"landlords"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get_Call",
			"item": [
				{
					"name": "Get_all_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" eval(globals.postmanBDD);",
									" it ('verify the list of landlord', function(){",
									"         let listOfLanlords = response.body;",
									"         console.log (listOfLanlords);",
									"         console.log (listOfLanlords.length);",
									"         assert.lengthOf(listOfLanlords, listOfLanlords.length);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/landlords",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"landlords"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_by_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" eval(globals.postmanBDD);",
									" describe('creating a new land lord',function(){",
									"   //Assertion ",
									"    it('Should return 200',function(){",
									"       ",
									"           response.should.have.status(200);",
									"        });",
									"//Assertion",
									"it ('should return JSON in header as contentType', function(){",
									"         response.should.have.header('content-type', 'application/json;charset=UTF-8');",
									"    });",
									" //Assertion",
									" it ('should return id', function(){",
									"       response.body.should.have.property(\"id\").and.equal(\"X5jwPznR\");",
									"   });",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Yeamin\",\n  \"lastName\": \"Arafat\",\n  \"trusted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/landlords/{{landlordsId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"landlords",
								"{{landlordsId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update",
			"item": [
				{
					"name": "Put_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" eval(globals.postmanBDD);",
									" describe('creating a new land lord',function(){",
									"   //Assertion ",
									"    it('Should return 200',function(){",
									"       ",
									"           response.should.have.status(200);",
									"        });",
									"//Assertion",
									"it ('should return JSON in header as contentType', function(){",
									"         response.should.have.header('content-type', 'application/json;charset=UTF-8');",
									"    });",
									" ",
									"   });",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Joe\",\n  \"lastName\": \"biden\",\n  \"trusted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/landlords/{{landlordsId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"landlords",
								"{{landlordsId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(globals.postmanBDD);",
									"describe('creating a new land lord',function(){",
									"   //Assertion ",
									"    it('Should return 200',function(){",
									"       ",
									"           response.should.have.status(200);",
									"        });",
									"//Assertion",
									"it ('should return JSON in header as contentType', function(){",
									"         response.should.have.header('content-type', 'application/json;charset=UTF-8');",
									"    });",
									" //Assertion",
									"",
									" ",
									"   });",
									" ",
									"",
									"",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Joe\",\n  \"lastName\": \"biden\",\n  \"trusted\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/landlords/{{landlordsId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"landlords",
								"{{landlordsId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}